GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccYJpaaa.s 			page 1


   1              	# 1 "ISRwrapper.S"
   1              	/* ISRwrapper.s - PIC32MX - Instantiate wrappers for C-language ISRs
   0              	
   0              	
   0              	
   2              	**
   3              	** Define ISR wrapper and vector branch code to support "C" ISRs.
   4              	** See "ISRwrapper.inc" for details...
   5              	**
   6              	** History:
   7              	**   20090830 DRNadler: CPP demo example
   8              	**
   9              	**
  10              	** Copyright (c) 2009 Dave Nadler
  11              	**
  12              	** The authors hereby grant permission to use, copy, modify, distribute,
  13              	** and license this software and its documentation for any purpose, provided
  14              	** that existing copyright notices are retained in all copies and that this
  15              	** notice is included verbatim in any distributions.  No written agreement,
  16              	** license, or royalty fee is required for any of the authorized uses.
  17              	** Modifications to this software may be copyrighted by their authors
  18              	** and need not follow the licensing terms described here, provided that
  19              	** the new terms are clearly indicated on the first page of each file where
  20              	** they apply.
  21              	*/
  22              	
  23              	.include "ISRwrapper.inc"
   1              	/* ISRwrapper.inc - PIC32MX ISR wrapper code - macro ISR_wrapper
   2              	**
   3              	** Define ISR wrapper and vector branch code to support "C" ISR.
   4              	** For a given vector_XX, create wrapper code to direct vector
   5              	** XX to the named C-language ISR.
   6              	**
   7              	** To use with any Microchip headers (not recommended),
   8              	** compile with "-fdollars-in-identifiers" option.
   9              	**
  10              	** History:
  11              	**   20090505 DRNadler: Original coding
  12              	**
  13              	**
  14              	** Copyright (c) 2009 Dave Nadler
  15              	**
  16              	** The authors hereby grant permission to use, copy, modify, distribute,
  17              	** and license this software and its documentation for any purpose, provided
  18              	** that existing copyright notices are retained in all copies and that this
  19              	** notice is included verbatim in any distributions.  No written agreement,
  20              	** license, or royalty fee is required for any of the authorized uses.
  21              	** Modifications to this software may be copyrighted by their authors
  22              	** and need not follow the licensing terms described here, provided that
  23              	** the new terms are clearly indicated on the first page of each file where
  24              	** they apply.
  25              	*/
  26              	
  27              	        .macro  ISR_wrapper     _XX:req,C_ISR_NAME:req
  28              	
  29              	  /*
  30              	  ** First, fill in interrupt vector to branch to the ISR wrapper
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccYJpaaa.s 			page 2


  31              	  */
  32              		.section .vector_\_XX,"ax",%progbits
  33              		j	vector_\_XX\()_ISR_wrapper
  34              		nop
  35              	
  36              	  /*
  37              	  ** Second, create an ISR wrapper that calls the C-language routine
  38              	  */
  39              		.section .text,"ax",%progbits
  40              	        .align  2
  41              	        .set    nomips16
  42              		.globl  vector_\_XX\()_ISR_wrapper
  44              		.ent	vector_\_XX\()_ISR_wrapper
  45              	vector_\_XX\()_ISR_wrapper:
  46              		.frame	$fp,120,$31		# vars= 16, regs= 18/0, args= 16, gp= 0
  47              		.mask	0xc300fffc,-20
  48              		.fmask	0x00000000,0
  49              		.set	noreorder
  50              		.set	nomacro
  51              	
  52              		rdpgpr	$sp, $sp
  53              		mfc0	$k0, $13		/* read CAUSE register */
  54              		mfc0	$k1, $14		/* read EPC register */
  55              		addiu	$sp, $sp, -120		/* 30 (!) words space on stack */
  56              		sw	$k1, 116($sp)		/* save EPC on stack */
  57              		mfc0	$k1, $12		/* read STATUS register */
  58              		srl	$k0, $k0, 10		/* align RIPL to bit 0 */
  59              		sw	$k1, 112($sp)		/* save STATUS on stack */
  60              		ins	$k1, $k0, 10, 6		/* insert RIPL to IPL field */
  61              		mflo	$k0
  62              		sw	$k0, 108($sp)
  63              		mfhi	$k0
  64              		sw	$k0, 104($sp)
  65              		ins	$k1, $0, 1, 4
  66              		mtc0	$k1, $12		/* write STATUS register */
  67              		sw	$31,100($sp)
  68              		sw	$fp,96($sp)
  69              		sw	$25,92($sp)
  70              		sw	$24,88($sp)
  71              		sw	$15,84($sp)
  72              		sw	$14,80($sp)
  73              		sw	$13,76($sp)
  74              		sw	$12,72($sp)
  75              		sw	$11,68($sp)
  76              		sw	$10,64($sp)
  77              		sw	$9,60($sp)
  78              		sw	$8,56($sp)
  79              		sw	$7,52($sp)
  80              		sw	$6,48($sp)
  81              		sw	$5,44($sp)
  82              		sw	$4,40($sp)
  83              		sw	$3,36($sp)
  84              		sw	$2,32($sp)
  85              		move	$fp,$sp
  86              	
  87              	        /* Finally, call the C-Language ISR */
  88              		jal	\C_ISR_NAME     /* jal stores return address in $31, already saved... */
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccYJpaaa.s 			page 3


  89              		nop
  90              	
  91              		move	$sp,$fp
  92              		lw	$31,100($sp)
  93              		lw	$fp,96($sp)
  94              		lw	$25,92($sp)
  95              		lw	$24,88($sp)
  96              		lw	$15,84($sp)
  97              		lw	$14,80($sp)
  98              		lw	$13,76($sp)
  99              		lw	$12,72($sp)
 100              		lw	$11,68($sp)
 101              		lw	$10,64($sp)
 102              		lw	$9,60($sp)
 103              		lw	$8,56($sp)
 104              		lw	$7,52($sp)
 105              		lw	$6,48($sp)
 106              		lw	$5,44($sp)
 107              		lw	$4,40($sp)
 108              		lw	$3,36($sp)
 109              		lw	$2,32($sp)
 110              		di				/* disable interrupts - just in case ? where enabled ? */
 111              		ehb
 112              		lw	$k0, 108($sp)
 113              		mtlo	$k0
 114              		lw	$k0, 104($sp)
 115              		mthi	$k0
 116              		lw	$k0, 116($sp)		/* restore EPC from stack */
 117              		mtc0	$k0, $14
 118              		lw	$k0, 112($sp)
 119              		addiu	$sp, $sp, 120		/* restore stack pointer */
 120              		mtc0	$k0, $12
 121              		eret
 122              		.set	macro
 123              		.set	reorder
 124              		.end	vector_\_XX\()_ISR_wrapper
 125              	
 126              	        .endm
  24              	
  25              	# See p32mx440f256h.h etc. for vector assignments for specific processor.
  26              	# Create wrappers for ISRs used in a specific application.
  27 0000 00E85D41 		ISR_wrapper  4,c_vector_4_ISR   # timer 1 (POSIX time emulation, delay manager support)
  27      00681A40 
  27      00701B40 
  27      88FFBD27 
  27      7400BBAF 
  28 010c 00E85D41 		ISR_wrapper	24,c_vector_24_ISR  # UART 1 - RS232 (SN10, diagnostics)
  28      00681A40 
  28      00701B40 
  28      88FFBD27 
  28      7400BBAF 
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccYJpaaa.s 			page 4


DEFINED SYMBOLS
        ISRwrapper.S:27     .text:0000000000000000 vector_4_ISR_wrapper
        ISRwrapper.S:28     .text:000000000000010c vector_24_ISR_wrapper

UNDEFINED SYMBOLS
c_vector_4_ISR
c_vector_24_ISR
