GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 1


   1              		.section .mdebug.abi32
   2              		.previous
   3              		.gnu_attribute 4, 3
  11              	.Ltext0:
  12              		.local	stdout_redirected
  13              		.comm	stdout_redirected,4,4
  14              		.local	redirect_file
  15              		.comm	redirect_file,4,4
  16              		.align	2
  17              		.globl	DRN_std_redirect
  18              	.LFB23:
  19              		.file 1 "DRN_PIC32MX_CS_glue.c"
   1:DRN_PIC32MX_CS_glue.c **** /* DRN_PIC32MX_CS_glue.c  -  PIC32MX newlib environment glue
   2:DRN_PIC32MX_CS_glue.c **** **
   3:DRN_PIC32MX_CS_glue.c **** ** Map newlib read and write to UART1 and/or local FAT file system
   4:DRN_PIC32MX_CS_glue.c **** **
   5:DRN_PIC32MX_CS_glue.c **** ** Provides minimal stubs for OS functions "read" and "write"
   6:DRN_PIC32MX_CS_glue.c **** ** Works for newlib or any runtime library that sends IO for file descriptors
   7:DRN_PIC32MX_CS_glue.c **** ** stdin/stdout to "read" and "write".
   8:DRN_PIC32MX_CS_glue.c **** **
   9:DRN_PIC32MX_CS_glue.c **** ** Copyright (c) 2009 Dave Nadler
  10:DRN_PIC32MX_CS_glue.c **** **
  11:DRN_PIC32MX_CS_glue.c **** ** The authors hereby grant permission to use, copy, modify, distribute,
  12:DRN_PIC32MX_CS_glue.c **** ** and license this software and its documentation for any purpose, provided
  13:DRN_PIC32MX_CS_glue.c **** ** that existing copyright notices are retained in all copies and that this
  14:DRN_PIC32MX_CS_glue.c **** ** notice is included verbatim in any distributions.  No written agreement,
  15:DRN_PIC32MX_CS_glue.c **** ** license, or royalty fee is required for any of the authorized uses.
  16:DRN_PIC32MX_CS_glue.c **** ** Modifications to this software may be copyrighted by their authors
  17:DRN_PIC32MX_CS_glue.c **** ** and need not follow the licensing terms described here, provided that
  18:DRN_PIC32MX_CS_glue.c **** ** the new terms are clearly indicated on the first page of each file where
  19:DRN_PIC32MX_CS_glue.c **** ** they apply.
  20:DRN_PIC32MX_CS_glue.c **** **
  21:DRN_PIC32MX_CS_glue.c **** ** Modification History:
  22:DRN_PIC32MX_CS_glue.c **** **  29Aug09 DRNadler:   Bugfix: prevent recursion in DRN_std_unredirect
  23:DRN_PIC32MX_CS_glue.c **** **  15Jul09 DRNadler:   No-op's for when no file system is available
  24:DRN_PIC32MX_CS_glue.c **** **  12Jun09 DRNadler:   Split UART1 code into DRN_PIC32MX_UART1.*
  25:DRN_PIC32MX_CS_glue.c **** **  11May09 DRNadler:   Initial Coding
  26:DRN_PIC32MX_CS_glue.c **** */
  27:DRN_PIC32MX_CS_glue.c **** 
  28:DRN_PIC32MX_CS_glue.c **** // #include <unistd.h>     // OS read/write, as required by newlib and provided below
  29:DRN_PIC32MX_CS_glue.c **** #include <fcntl.h> // flags for 'open'
  30:DRN_PIC32MX_CS_glue.c **** 
  31:DRN_PIC32MX_CS_glue.c **** #include "HardwareProfile.h"   // low-level peripherals plus configured speeds
  32:DRN_PIC32MX_CS_glue.c **** #include "DRN_PIC32MX_UART1.h" // getc/putc etc.
  33:DRN_PIC32MX_CS_glue.c **** 
  34:DRN_PIC32MX_CS_glue.c **** #if 1
  35:DRN_PIC32MX_CS_glue.c ****     // no-op routines/macros for when no file system exists
  36:DRN_PIC32MX_CS_glue.c ****     //int DRN_f_write(int file, char *ptr, int len) { return len; };
  37:DRN_PIC32MX_CS_glue.c ****     //int DRN_f_read(int file, char *ptr, int len) { return 0; };
  38:DRN_PIC32MX_CS_glue.c ****     #define DRN_f_write(file, ptr, len) (len)
  39:DRN_PIC32MX_CS_glue.c ****     #define DRN_f_read(file, ptr, len) (0)
  40:DRN_PIC32MX_CS_glue.c **** #endif
  41:DRN_PIC32MX_CS_glue.c **** 
  42:DRN_PIC32MX_CS_glue.c **** #if 0
  43:DRN_PIC32MX_CS_glue.c ****   // Test printf (works OK)...
  44:DRN_PIC32MX_CS_glue.c ****   void test_printf(void) {
  45:DRN_PIC32MX_CS_glue.c ****     static const unsigned char ExampleName[] = "123456789ABC";
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 2


  46:DRN_PIC32MX_CS_glue.c ****     printf("\n\n====  DRN tests for printf functionality  ====\n");
  47:DRN_PIC32MX_CS_glue.c ****     printf("The answer is %d\nABC\n",43);
  48:DRN_PIC32MX_CS_glue.c ****     printf("Test String11 output '%-11.11s'\n", ExampleName);
  49:DRN_PIC32MX_CS_glue.c ****     printf("Test hex output >>%3x<<  >>%05X<<\n", 0x123, 0x123);
  50:DRN_PIC32MX_CS_glue.c ****   }
  51:DRN_PIC32MX_CS_glue.c **** #endif
  52:DRN_PIC32MX_CS_glue.c **** 
  53:DRN_PIC32MX_CS_glue.c **** // ======================  STDOUT redirect ===============================
  54:DRN_PIC32MX_CS_glue.c **** // Redirect stdout/stderr to file, then resume normal operation
  55:DRN_PIC32MX_CS_glue.c **** // Redirecting stdout and stderr permits normal "printf" use
  56:DRN_PIC32MX_CS_glue.c **** // while serial port is otherwise busy...
  57:DRN_PIC32MX_CS_glue.c **** static int stdout_redirected = 0;
  58:DRN_PIC32MX_CS_glue.c **** static int redirect_file = 0;
  59:DRN_PIC32MX_CS_glue.c **** void DRN_std_redirect(const char* filename) {
  20              		.loc 1 59 0
  21              		.set	nomips16
  22              		.ent	DRN_std_redirect
  23              	DRN_std_redirect:
  24              		.frame	$fp,24,$31		# vars= 0, regs= 2/0, args= 16, gp= 0
  25              		.mask	0xc0000000,-4
  26              		.fmask	0x00000000,0
  27              		.set	noreorder
  28              		.set	nomacro
  29              		
  30 0000 E8FFBD27 		addiu	$sp,$sp,-24
  31              	.LCFI0:
  32 0004 1400BFAF 		sw	$31,20($sp)
  33              	.LCFI1:
  34 0008 1000BEAF 		sw	$fp,16($sp)
  35              	.LCFI2:
  36 000c 21F0A003 		move	$fp,$sp
  37              	.LCFI3:
  38 0010 1800C4AF 		sw	$4,24($fp)
  60:DRN_PIC32MX_CS_glue.c ****     redirect_file = open(filename, O_WRONLY /* Windows only: | O_TEXT */);
  39              		.loc 1 60 0
  40 0014 1800C48F 		lw	$4,24($fp)
  41 0018 01000524 		li	$5,1			# 0x1
  42 001c 0000000C 		jal	open
  43 0020 00000000 		nop
  44              	
  45 0024 04C082AF 		sw	$2,%gp_rel(redirect_file)($28)
  61:DRN_PIC32MX_CS_glue.c ****     stdout_redirected = 1;
  46              		.loc 1 61 0
  47 0028 01000224 		li	$2,1			# 0x1
  48 002c 00C082AF 		sw	$2,%gp_rel(stdout_redirected)($28)
  62:DRN_PIC32MX_CS_glue.c **** }
  49              		.loc 1 62 0
  50 0030 21E8C003 		move	$sp,$fp
  51 0034 1400BF8F 		lw	$31,20($sp)
  52 0038 1000BE8F 		lw	$fp,16($sp)
  53 003c 1800BD27 		addiu	$sp,$sp,24
  54 0040 0800E003 		j	$31
  55 0044 00000000 		nop
  56              	
  57              		.set	macro
  58              		.set	reorder
  59              		.end	DRN_std_redirect
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 3


  60              	.LFE23:
  62              		.align	2
  63              		.globl	DRN_std_unredirect
  64              	.LFB24:
  63:DRN_PIC32MX_CS_glue.c **** void DRN_std_unredirect(void) {
  65              		.loc 1 63 0
  66              		.set	nomips16
  67              		.ent	DRN_std_unredirect
  68              	DRN_std_unredirect:
  69              		.frame	$fp,24,$31		# vars= 0, regs= 2/0, args= 16, gp= 0
  70              		.mask	0xc0000000,-4
  71              		.fmask	0x00000000,0
  72              		.set	noreorder
  73              		.set	nomacro
  74              		
  75 0048 E8FFBD27 		addiu	$sp,$sp,-24
  76              	.LCFI4:
  77 004c 1400BFAF 		sw	$31,20($sp)
  78              	.LCFI5:
  79 0050 1000BEAF 		sw	$fp,16($sp)
  80              	.LCFI6:
  81 0054 21F0A003 		move	$fp,$sp
  82              	.LCFI7:
  64:DRN_PIC32MX_CS_glue.c ****     stdout_redirected = 0; // *BEFORE* calling close, so diag printfs within close don't blow up...
  83              		.loc 1 64 0
  84 0058 00C080AF 		sw	$0,%gp_rel(stdout_redirected)($28)
  65:DRN_PIC32MX_CS_glue.c ****     if(redirect_file>0) close(redirect_file);
  85              		.loc 1 65 0
  86 005c 04C0828F 		lw	$2,%gp_rel(redirect_file)($28)
  87 0060 05004018 		blez	$2,.L4
  88 0064 00000000 		nop
  89              	
  90 0068 04C0828F 		lw	$2,%gp_rel(redirect_file)($28)
  91 006c 21204000 		move	$4,$2
  92 0070 0000000C 		jal	close
  93 0074 00000000 		nop
  94              	
  95              	.L4:
  66:DRN_PIC32MX_CS_glue.c ****     redirect_file = 0;
  96              		.loc 1 66 0
  97 0078 04C080AF 		sw	$0,%gp_rel(redirect_file)($28)
  67:DRN_PIC32MX_CS_glue.c **** }
  98              		.loc 1 67 0
  99 007c 21E8C003 		move	$sp,$fp
 100 0080 1400BF8F 		lw	$31,20($sp)
 101 0084 1000BE8F 		lw	$fp,16($sp)
 102 0088 1800BD27 		addiu	$sp,$sp,24
 103 008c 0800E003 		j	$31
 104 0090 00000000 		nop
 105              	
 106              		.set	macro
 107              		.set	reorder
 108              		.end	DRN_std_unredirect
 109              	.LFE24:
 111              		.align	2
 112              		.globl	write
 113              	.LFB25:
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 4


  68:DRN_PIC32MX_CS_glue.c **** 
  69:DRN_PIC32MX_CS_glue.c **** // =================== newlib connections to FAT etc ================
  70:DRN_PIC32MX_CS_glue.c **** // Low-level Unix IO IO functions called by newlib
  71:DRN_PIC32MX_CS_glue.c **** int write(int file, char *ptr, int len) {
 114              		.loc 1 71 0
 115              		.set	nomips16
 116              		.ent	write
 117              	write:
 118              		.frame	$fp,40,$31		# vars= 16, regs= 2/0, args= 16, gp= 0
 119              		.mask	0xc0000000,-4
 120              		.fmask	0x00000000,0
 121              		.set	noreorder
 122              		.set	nomacro
 123              		
 124 0094 D8FFBD27 		addiu	$sp,$sp,-40
 125              	.LCFI8:
 126 0098 2400BFAF 		sw	$31,36($sp)
 127              	.LCFI9:
 128 009c 2000BEAF 		sw	$fp,32($sp)
 129              	.LCFI10:
 130 00a0 21F0A003 		move	$fp,$sp
 131              	.LCFI11:
 132 00a4 2800C4AF 		sw	$4,40($fp)
 133 00a8 2C00C5AF 		sw	$5,44($fp)
 134 00ac 3000C6AF 		sw	$6,48($fp)
  72:DRN_PIC32MX_CS_glue.c ****     // For stdin, stdout, or stderr, send output to UART1 (or to redirect file)
  73:DRN_PIC32MX_CS_glue.c ****     if(file==0 || file==1 || file==2) {
 135              		.loc 1 73 0
 136 00b0 2800C28F 		lw	$2,40($fp)
 137 00b4 09004010 		beq	$2,$0,.L7
 138 00b8 00000000 		nop
 139              	
 140 00bc 2800C38F 		lw	$3,40($fp)
 141 00c0 01000224 		li	$2,1			# 0x1
 142 00c4 05006210 		beq	$3,$2,.L7
 143 00c8 00000000 		nop
 144              	
 145 00cc 2800C38F 		lw	$3,40($fp)
 146 00d0 02000224 		li	$2,2			# 0x2
 147 00d4 38006214 		bne	$3,$2,.L8
 148 00d8 00000000 		nop
 149              	
 150              	.L7:
  74:DRN_PIC32MX_CS_glue.c ****         if(stdout_redirected) {
 151              		.loc 1 74 0
 152 00dc 00C0828F 		lw	$2,%gp_rel(stdout_redirected)($28)
 153 00e0 11004010 		beq	$2,$0,.L9
 154 00e4 00000000 		nop
 155              	
  75:DRN_PIC32MX_CS_glue.c ****             if(redirect_file>0)
 156              		.loc 1 75 0
 157 00e8 04C0828F 		lw	$2,%gp_rel(redirect_file)($28)
 158 00ec 0A004018 		blez	$2,.L10
 159 00f0 00000000 		nop
 160              	
  76:DRN_PIC32MX_CS_glue.c ****                 return write(redirect_file,ptr,len);
 161              		.loc 1 76 0
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 5


 162 00f4 04C0828F 		lw	$2,%gp_rel(redirect_file)($28)
 163 00f8 21204000 		move	$4,$2
 164 00fc 2C00C58F 		lw	$5,44($fp)
 165 0100 3000C68F 		lw	$6,48($fp)
 166 0104 0000000C 		jal	write
 167 0108 00000000 		nop
 168              	
 169 010c 1800C2AF 		sw	$2,24($fp)
 170 0110 70000008 		j	.L11
 171 0114 00000000 		nop
 172              	
 173              	.L10:
  77:DRN_PIC32MX_CS_glue.c ****             else
  78:DRN_PIC32MX_CS_glue.c ****                 return len; // redirect file open failed; output is ignored...
 174              		.loc 1 78 0
 175 0118 3000C28F 		lw	$2,48($fp)
 176 011c 1800C2AF 		sw	$2,24($fp)
 177 0120 70000008 		j	.L11
 178 0124 00000000 		nop
 179              	
 180              	.L9:
 181              	.LBB2:
  79:DRN_PIC32MX_CS_glue.c ****         } else {
  80:DRN_PIC32MX_CS_glue.c ****             int todo;
  81:DRN_PIC32MX_CS_glue.c ****             for (todo = len; todo; todo--) {
 182              		.loc 1 81 0
 183 0128 3000C28F 		lw	$2,48($fp)
 184 012c 1400C2AF 		sw	$2,20($fp)
 185 0130 67000008 		j	.L12
 186 0134 00000000 		nop
 187              	
 188              	.L15:
 189              	.LBB3:
  82:DRN_PIC32MX_CS_glue.c ****                 char c = *ptr++;
 190              		.loc 1 82 0
 191 0138 2C00C28F 		lw	$2,44($fp)
 192 013c 00004290 		lbu	$2,0($2)
 193 0140 1000C2A3 		sb	$2,16($fp)
 194 0144 2C00C28F 		lw	$2,44($fp)
 195 0148 01004224 		addiu	$2,$2,1
 196 014c 2C00C2AF 		sw	$2,44($fp)
  83:DRN_PIC32MX_CS_glue.c ****                 if(c=='\n') { __DRN_putc('\r'); __DRN_putc('\n'); }
 197              		.loc 1 83 0
 198 0150 1000C393 		lbu	$3,16($fp)
 199 0154 0A000224 		li	$2,10			# 0xa
 200 0158 09006214 		bne	$3,$2,.L13
 201 015c 00000000 		nop
 202              	
 203 0160 0D000424 		li	$4,13			# 0xd
 204 0164 0000000C 		jal	__DRN_putc
 205 0168 00000000 		nop
 206              	
 207 016c 0A000424 		li	$4,10			# 0xa
 208 0170 0000000C 		jal	__DRN_putc
 209 0174 00000000 		nop
 210              	
 211 0178 64000008 		j	.L14
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 6


 212 017c 00000000 		nop
 213              	
 214              	.L13:
  84:DRN_PIC32MX_CS_glue.c ****                 else        { __DRN_putc(c);                      }
 215              		.loc 1 84 0
 216 0180 1000C293 		lbu	$2,16($fp)
 217 0184 21204000 		move	$4,$2
 218 0188 0000000C 		jal	__DRN_putc
 219 018c 00000000 		nop
 220              	
 221              	.L14:
 222              	.LBE3:
 223              		.loc 1 81 0
 224 0190 1400C28F 		lw	$2,20($fp)
 225 0194 FFFF4224 		addiu	$2,$2,-1
 226 0198 1400C2AF 		sw	$2,20($fp)
 227              	.L12:
 228 019c 1400C28F 		lw	$2,20($fp)
 229 01a0 E5FF4014 		bne	$2,$0,.L15
 230 01a4 00000000 		nop
 231              	
  85:DRN_PIC32MX_CS_glue.c ****             }
  86:DRN_PIC32MX_CS_glue.c ****             return len;
 232              		.loc 1 86 0
 233 01a8 3000C28F 		lw	$2,48($fp)
 234 01ac 1800C2AF 		sw	$2,24($fp)
 235 01b0 70000008 		j	.L11
 236 01b4 00000000 		nop
 237              	
 238              	.L8:
 239              	.LBE2:
  87:DRN_PIC32MX_CS_glue.c ****         }
  88:DRN_PIC32MX_CS_glue.c ****     }
  89:DRN_PIC32MX_CS_glue.c ****     // map file IO to DRN stubs, defined in application...
  90:DRN_PIC32MX_CS_glue.c ****     return DRN_f_write(file,ptr,len);
 240              		.loc 1 90 0
 241 01b8 3000C28F 		lw	$2,48($fp)
 242 01bc 1800C2AF 		sw	$2,24($fp)
 243              	.L11:
 244 01c0 1800C28F 		lw	$2,24($fp)
  91:DRN_PIC32MX_CS_glue.c **** }
 245              		.loc 1 91 0
 246 01c4 21E8C003 		move	$sp,$fp
 247 01c8 2400BF8F 		lw	$31,36($sp)
 248 01cc 2000BE8F 		lw	$fp,32($sp)
 249 01d0 2800BD27 		addiu	$sp,$sp,40
 250 01d4 0800E003 		j	$31
 251 01d8 00000000 		nop
 252              	
 253              		.set	macro
 254              		.set	reorder
 255              		.end	write
 256              	.LFE25:
 258              		.align	2
 259              		.globl	read
 260              	.LFB26:
  92:DRN_PIC32MX_CS_glue.c **** int read(int file, char *ptr, int len) {
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 7


 261              		.loc 1 92 0
 262              		.set	nomips16
 263              		.ent	read
 264              	read:
 265              		.frame	$fp,40,$31		# vars= 16, regs= 2/0, args= 16, gp= 0
 266              		.mask	0xc0000000,-4
 267              		.fmask	0x00000000,0
 268              		.set	noreorder
 269              		.set	nomacro
 270              		
 271 01dc D8FFBD27 		addiu	$sp,$sp,-40
 272              	.LCFI12:
 273 01e0 2400BFAF 		sw	$31,36($sp)
 274              	.LCFI13:
 275 01e4 2000BEAF 		sw	$fp,32($sp)
 276              	.LCFI14:
 277 01e8 21F0A003 		move	$fp,$sp
 278              	.LCFI15:
 279 01ec 2800C4AF 		sw	$4,40($fp)
 280 01f0 2C00C5AF 		sw	$5,44($fp)
 281 01f4 3000C6AF 		sw	$6,48($fp)
  93:DRN_PIC32MX_CS_glue.c ****     // For stdin (called by gets etc), stdout, or stderr, read from UART1
  94:DRN_PIC32MX_CS_glue.c ****     if(file==0 || file==1 || file==2) {
 282              		.loc 1 94 0
 283 01f8 2800C28F 		lw	$2,40($fp)
 284 01fc 09004010 		beq	$2,$0,.L18
 285 0200 00000000 		nop
 286              	
 287 0204 2800C38F 		lw	$3,40($fp)
 288 0208 01000224 		li	$2,1			# 0x1
 289 020c 05006210 		beq	$3,$2,.L18
 290 0210 00000000 		nop
 291              	
 292 0214 2800C38F 		lw	$3,40($fp)
 293 0218 02000224 		li	$2,2			# 0x2
 294 021c 16006214 		bne	$3,$2,.L19
 295 0220 00000000 		nop
 296              	
 297              	.L18:
 298              	.LBB4:
  95:DRN_PIC32MX_CS_glue.c ****         // printf("read(file=%d,*,len=%d... ",file,len);
  96:DRN_PIC32MX_CS_glue.c ****         int ic;
  97:DRN_PIC32MX_CS_glue.c ****         while( (ic=__DRN_getc()) == -1) {}; // block until a character typed
 299              		.loc 1 97 0
 300 0224 0000000C 		jal	__DRN_getc
 301 0228 00000000 		nop
 302              	
 303 022c 1000C2AF 		sw	$2,16($fp)
 304 0230 1000C38F 		lw	$3,16($fp)
 305 0234 FFFF0224 		li	$2,-1			# 0xffffffffffffffff
 306 0238 FAFF6210 		beq	$3,$2,.L18
 307 023c 00000000 		nop
 308              	
  98:DRN_PIC32MX_CS_glue.c ****         if(ic == 0x0D) ic = 0x0A; // map "Return" on terminal to newline
 309              		.loc 1 98 0
 310 0240 1000C38F 		lw	$3,16($fp)
 311 0244 0D000224 		li	$2,13			# 0xd
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 8


 312 0248 03006214 		bne	$3,$2,.L20
 313 024c 00000000 		nop
 314              	
 315 0250 0A000224 		li	$2,10			# 0xa
 316 0254 1000C2AF 		sw	$2,16($fp)
 317              	.L20:
  99:DRN_PIC32MX_CS_glue.c ****         *ptr = (char)ic;
 318              		.loc 1 99 0
 319 0258 1000C28F 		lw	$2,16($fp)
 320 025c FF004330 		andi	$3,$2,0x00ff
 321 0260 2C00C28F 		lw	$2,44($fp)
 322 0264 000043A0 		sb	$3,0($2)
 100:DRN_PIC32MX_CS_glue.c ****         // printf(" %02x\n",ic);
 101:DRN_PIC32MX_CS_glue.c ****         return 1;
 323              		.loc 1 101 0
 324 0268 01000224 		li	$2,1			# 0x1
 325 026c 1800C2AF 		sw	$2,24($fp)
 326 0270 9F000008 		j	.L21
 327 0274 00000000 		nop
 328              	
 329              	.L19:
 330              	.LBE4:
 102:DRN_PIC32MX_CS_glue.c ****     }
 103:DRN_PIC32MX_CS_glue.c ****     // map file IO to DRN stubs, defined in application...
 104:DRN_PIC32MX_CS_glue.c ****     return DRN_f_read(file, ptr, len);
 331              		.loc 1 104 0
 332 0278 1800C0AF 		sw	$0,24($fp)
 333              	.L21:
 334 027c 1800C28F 		lw	$2,24($fp)
 105:DRN_PIC32MX_CS_glue.c **** }
 335              		.loc 1 105 0
 336 0280 21E8C003 		move	$sp,$fp
 337 0284 2400BF8F 		lw	$31,36($sp)
 338 0288 2000BE8F 		lw	$fp,32($sp)
 339 028c 2800BD27 		addiu	$sp,$sp,40
 340 0290 0800E003 		j	$31
 341 0294 00000000 		nop
 342              	
 343              		.set	macro
 344              		.set	reorder
 345              		.end	read
 346              	.LFE26:
 452              	.Letext0:
GAS LISTING C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 DRN_PIC32MX_CS_glue.c
C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s:13     .sbss:0000000000000000 stdout_redirected
C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s:15     .sbss:0000000000000004 redirect_file
C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s:23     .text:0000000000000000 DRN_std_redirect
C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s:68     .text:0000000000000048 DRN_std_unredirect
C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s:117    .text:0000000000000094 write
C:\DOCUME~1\DNadler\LOCALS~1\Temp/ccQLpaaa.s:264    .text:00000000000001dc read

UNDEFINED SYMBOLS
open
close
__DRN_putc
__DRN_getc
